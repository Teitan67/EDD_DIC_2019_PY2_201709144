/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import _EDD.tablaHash;
import java.awt.Image;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Oscar-Laptop
 */
public class m_burbuja extends javax.swing.JFrame {

    /**
     * Creates new form m_burbuja
     */
    int iterador = 0;
    int jterador = 0;
    int arreglo[];
    String array = "";
    String conexion = "";
    int velocidad = 0;
    TimerTask tarea;

    public m_burbuja() {
        initComponents();
        abrirJson();
        mostrarImagen();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jLabel2);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel1.setText("Metodo Burbuja");

        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Siguiente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Iniciar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        burbuja();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        burbuja();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        velocidad = Integer.parseInt(jTextField1.getText()) * 1000;
        TimerTask tarea = new TimerTask() {
            @Override
            public void run() {
                //Metodo ejecucion automatica
                burbuja();

                try {
                    Thread.sleep(1500);
                    mostrarImagen();
                } catch (InterruptedException ex) {
                    Logger.getLogger(AVL_recorrido.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        };

        Timer t = new Timer();
        t.schedule(tarea, velocidad, velocidad);
    }//GEN-LAST:event_jButton3ActionPerformed
    void abrirJson() {

        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JSON", "json");
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(filter);
        fc.showOpenDialog(this);
        File Archivo = fc.getSelectedFile();
        JSONParser jsonParser = new JSONParser();
        if (Archivo != null) {

            JSONParser parser = new JSONParser();

            try (Reader reader = new FileReader(Archivo.getAbsolutePath())) {

                JSONObject jsonObject = (JSONObject) parser.parse(reader);

                // loop array
                JSONArray input = (JSONArray) jsonObject.get("Array");
                JSONObject s;
                arreglo = new int[input.size()];
                for (int i = 0; i < input.size(); i++) {
                    s = (JSONObject) input.get(i);
                    arreglo[i] = s.get("num").hashCode();
                    System.out.println(arreglo[i]);
                }
                // System.out.println(userList2.size());

            } catch (FileNotFoundException e) {
            } catch (IOException e) {
            } catch (org.json.simple.parser.ParseException ex) {
                Logger.getLogger(m_Administrador.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    void burbuja() {
        if (iterador < arreglo.length - 1) {
            if (jterador < arreglo.length - 1) {
                if (arreglo[jterador] < arreglo[jterador + 1]) {

                    conexion = "";
                    conexion = "node0:f" + jterador + "->node0:f" + (jterador + 1);
                    graficar();
                    int tmp = arreglo[jterador + 1];
                    arreglo[jterador + 1] = arreglo[jterador];
                    arreglo[jterador] = tmp;
                    

                }
                System.out.println(jterador);
               

            }
            jterador  ++;
             System.out.println(iterador);
            

        }
        iterador++;
        conexion = "";
        graficar();

    }

    public void graficar() {
        array = "";
        for (int i = 0; i < arreglo.length; i++) {
            if (i == arreglo.length - 1) {
                array += "<f" + i + ">" + arreglo[i];
            } else {
                array += "<f" + i + ">" + arreglo[i] + "|";
            }
            //<f1>A|<f2>B|<f3>C|<f4>D|<f5>E
        }
        String contenido = ""
                + "digraph G {\n"
                + "	nodesep=.05;\n"
                + "\n"
                + "	rankdir=LR;\n"
                + "\n"
                + "	node [shape=record,width=.1,height=.1];\n"
                + "\n"
                + "\n"
                + "	node0 [label = \"" + array + "\",height=2.5,];\n"
                + conexion
                + "\n"
                + "\n"
                + "}";
        System.out.println(contenido);
        try {
            generarReporte(contenido);
            Thread.sleep(2000);
            mostrarImagen();
        } catch (InterruptedException ex) {
            Logger.getLogger(AVL_recorrido.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void generarReporte(String contenido) {
        try {
            File f = new File("C:\\recursos\\COD-G.txt");
            FileWriter w = new FileWriter(f);
            BufferedWriter bw = new BufferedWriter(w);
            PrintWriter pw = new PrintWriter(bw);
            pw.write(contenido);
            pw.close();
            bw.close();
            try {
                Runtime.getRuntime().exec("C:\\recursos\\GenerarAVL.bat");
                System.out.println("REPORTE GENERADO...");

                //Runtime.getRuntime().exec(cmd1);
            } catch (IOException ioe) {
                System.out.println("No se genero" + ioe);
            }

        } catch (IOException ex) {
            Logger.getLogger(tablaHash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(m_burbuja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(m_burbuja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(m_burbuja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(m_burbuja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new m_burbuja().setVisible(true);
            }
        });
    }

    void mostrarImagen() {
        try {
            File file = new File("C:\\recursos\\IMG.png");
            Image img = ImageIO.read(file);
            ImageIcon icon = new ImageIcon(img);
            jLabel2.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(visorReporteHash.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
